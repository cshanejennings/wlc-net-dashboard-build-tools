// Comment out if not testing

const autoTest = (toggleOutputs) => {
  const left = document.getElementById("typescript");

  left.value = [
    `/**`,
    ` * Represents a Shopify Order`,
    ` * @see - https://shopify.dev/docs/api/admin-rest/2023-07/resources/order`,
    ` */`,
    `export type ShopifyOrderDTO = {`,
    `    /** The ID of the app that created the order */`,
    `    readonly app_id: number;`,
    `  `,
    `    /** The mailing address associated with the payment method */`,
    `    billing_address?: ShopifyCustomerAddress; // Optional field`,
    `  `,
    `    /** The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported. */`,
    `    readonly browser_ip: string;`,
    `  `,
    `    /** Whether the customer consented to receive email updates from the shop */`,
    `    buyer_accepts_marketing: boolean;`,
    `  `,
    `    /** The reason why the order was canceled. Valid values:`,
    `     * - **customer** -- The customer canceled the order.`,
    `     * - **fraud** -- The order was fraudulent.`,
    `     * - **inventory** -- Items in the order were not in inventory.`,
    `     * - **declined** -- The payment was declined.`,
    `     * - **other** -- A reason not in this list.`,
    `     */`,
    `    cancel_reason:`,
    `      | 'customer'`,
    `      | 'fraud'`,
    `      | 'inventory'`,
    `      | 'declined'`,
    `      | 'other';`,
    `  `,
    `    /** The date and time when the order was canceled. Returns null if the order isn't canceled. */`,
    `    readonly cancelled_at?: string; // ISO 8601`,
    `  `,
    `    /** A unique value when referencing the cart that's associated with the order */`,
    `    readonly cart_token: string;`,
    `  `,
    `    /** A unique value when referencing the checkout that's associated with the order */`,
    `    readonly checkout_token: string;`,
    `  `,
    `    /** Information about the browser that the customer used when they placed their order */`,
    `    readonly client_details?: ShopifyClientDetails;`,
    `  `,
    `    /** The date and time (ISO 8601 format) when the order was closed. Returns null if the order isn't closed. */`,
    `    readonly closed_at?: string;`,
    `  `,
    `    /** Represents information about the purchasing company for the order. null will be returned if there is no purchasing company */`,
    `    readonly company?: ShopifyCompany;`,
    `  `,
    `    /** A randomly generated alpha-numeric identifier for the order that may be shown to the customer instead of the sequential order name. This value isn't guaranteed to be unique. */`,
    `    confirmation_number: string;`,
    `  `,
    `    /** The autogenerated date and time (ISO 8601 format) when the order was created in Shopify. The value for this property cannot be changed. */`,
    `    readonly created_at: string;`,
    `  `,
    `    /** The three-letter code (ISO 4217 format) for the shop currency */`,
    `    readonly currency: string;`,
    `  `,
    `    /** The current total additional fees on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds. */`,
    `    current_total_additional_fees_set: ShopifyFeesSet;`,
    `  `,
    `    /** The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds. */`,
    `    readonly current_total_discounts: string;`,
    `  `,
    `    /** The current total discounts on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds. */`,
    `    readonly current_total_discounts_set: ShopifyFeesSet;`,
    `  `,
    `    /** The current total duties charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds. */`,
    `    readonly current_total_duties_set: ShopifyFeesSet;`,
    `  `,
    `    /** The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds. */`,
    `    readonly current_total_price: string;`,
    `  `,
    `    /** The current total price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds. */`,
    `    readonly current_total_price_set: ShopifyFeesSet;`,
    `  `,
    `    /** The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds. */`,
    `    readonly current_subtotal_price: string;`,
    `  `,
    `    /** The current subtotal price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds. */`,
    `    readonly current_subtotal_price_set: ShopifyFeesSet;`,
    `  `,
    `    /** The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds. */`,
    `    readonly current_total_tax: string;`,
    `  `,
    `    /** The current total taxes charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds. */`,
    `    readonly current_total_tax_set: ShopifyFeesSet;`,
    `  `,
    `    /** Information about the customer. The order might not have a customer and apps should not depend on the existence of a customer object. This value might be null if the order was created through Shopify POS. */`,
    `    customer?: ShopifyCustomer; // Optional field`,
    `  `,
    `    /** The two or three-letter language code, optionally followed by a region modifier. */`,
    `    readonly customer_locale?: string;`,
    `  `,
    `    /** An ordered list of stacked discount applications. The discount_applications property includes 3 types: discount_code, manual, and script. All 3 types share a common structure and have some type specific attributes. */`,
    `    readonly discount_applications: ShopifyDiscountApplication[];`,
    `  `,
    `    /** A list of discounts applied to the order. Each discount object includes specific properties. */`,
    `    discount_codes: ShopifyDiscountCode[];`,
    `  `,
    `    /** The customer's email address */`,
    `    email?: string; // EMAIL, Optional field`,
    `  `,
    `    /** Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes. This property returns false when taxes on the order are finalized and aren't subject to any changes. */`,
    `    estimated_taxes: boolean;`,
    `  `,
    `    /** The status of payments associated with the order. Can only be set when the order is created. Valid values */`,
    `    financial_status: string;`,
    `  `,
    `    /** An array of fulfillments associated with the order */`,
    `    fulfillments?: ShopifyFulfillment[]; // Optional field`,
    `  `,
    `    /**`,
    `     * The order's fulfillment status.`,
    `     * - **fulfilled**: Every line item in the order has been fulfilled.`,
    `     * - **null**: None of the line items in the order have been fulfilled.`,
    `     * - **partial**: At least one line item in the order has been fulfilled.`,
    `     * - **restocked**: Every line item in the order has been restocked and the order canceled.`,
    `     */`,
    `    fulfillment_status: 'fulfilled' | null | 'partial' | 'restocked';`,
    `  `,
    `    /** The payment gateway used. Deprecated */`,
    `    gateway?: string; // deprecated`,
    `  `,
    `    /** The ID of the order, used for API purposes. This is different from the order_number property, which is the ID used by the shop owner and customer. */`,
    `    readonly id: number;`,
    `  `,
    `    /** The URL for the page where the buyer landed when they entered the shop. */`,
    `    readonly landing_site?: string; // URL`,
    `  `,
    `    /** A list of line item objects, each containing information about an item in the order. */`,
    `    line_items: ShopifyOrderLineItem[];`,
    `  `,
    `    /** The ID of one of the locations that was assigned to fulfill the order when the order was created. */`,
    `    location_id?: number;`,
    `  `,
    `    /** The application acting as Merchant of Record for the order. */`,
    `    merchant_of_record_app_id?: number;`,
    `  `,
    `    /** The order name, generated by combining the order_number property with the order prefix and suffix that are set in the merchant's general settings. */`,
    `    name: string;`,
    `  `,
    `    /** An optional note that a shop owner can attach to the order. */`,
    `    note?: string;`,
    `  `,
    `    /** Extra information that is added to the order. Appears in the Additional details section of an order details page. */`,
    `    note_attributes?: ShopifyProperty;`,
    `  `,
    `    /** The order's position in the shop's count of orders. Numbers are sequential and start at 1. */`,
    `    readonly number: number;`,
    `  `,
    `    /** The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001. */`,
    `    readonly order_number: number;`,
    `  `,
    `    /** The original total additional fees on the order in shop and presentment currencies. */`,
    `    original_total_additional_fees_set?: ShopifyFeesSet;`,
    `  `,
    `    /** The original total duties charged on the order in shop and presentment currencies. */`,
    `    readonly original_total_duties_set?: ShopifyFeesSet;`,
    `  `,
    `    /** An object containing information about the payment. Deprecated */`,
    `    payment_details?: string; // deprecated`,
    `  `,
    `    /** The terms and conditions under which a payment should be processed. */`,
    `    readonly payment_terms?: ShopifyPaymentTerms;`,
    `  `,
    `    /** The list of payment gateways used for the order. */`,
    `    readonly payment_gateway_names?: string[];`,
    `  `,
    `    /** The customer's phone number for receiving SMS notifications. */`,
    `    phone?: string;`,
    `  `,
    `    /** The purchase order number associated with this order. */`,
    `    po_number?: string;`,
    `  `,
    `    /** The presentment currency that was used to display prices to the customer. */`,
    `    presentment_currency: string; // ISO 4217`,
    `  `,
    `    /** The date and time (ISO 8601 format) when an order was processed. */`,
    `    processed_at: string; // ISO 8601`,
    `  `,
    `    /** How the payment was processed. Deprecated */`,
    `    processing_method?: string; // deprecated`,
    `  `,
    `    /** The website where the customer clicked a link to the shop. */`,
    `    referring_site?: string; // URL`,
    `  `,
    `    /** A list of refunds applied to the order. */`,
    `    readonly refunds?: ShopifyRefund[];`,
    `  `,
    `    /** The mailing address to where the order will be shipped. */`,
    `    shipping_address?: ShopifyCustomerAddress; // Optional field`,
    `  `,
    `    /** An array of objects, each of which details a shipping method used. */`,
    `    shipping_lines?: ShopifyShippingLine[];`,
    `  `,
    `    /** The source of the checkout. */`,
    `    source_name?: string;`,
    `  `,
    `    /** The ID of the order placed on the originating platform. */`,
    `    source_identifier?: string;`,
    `  `,
    `    /** A valid URL to the original order on the originating surface. */`,
    `    source_url?: string;`,
    `  `,
    `    /** The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips. */`,
    `    subtotal_price: string;`,
    `  `,
    `    /** The subtotal of the order in shop and presentment currencies after discounts but before shipping, duties, taxes, and tips. */`,
    `    subtotal_price_set?: ShopifyFeesSet;`,
    `  `,
    `    /** Tags attached to the order, formatted as a string of comma-separated values. */`,
    `    tags?: string;`,
    `  `,
    `    /** An array of tax line objects, each of which details a tax applicable to the order. */`,
    `    tax_lines?: ShopifyTaxLine[];`,
    `  `,
    `    /** Whether taxes are included in the order subtotal. */`,
    `    taxes_included: boolean;`,
    `  `,
    `    /** Whether this is a test order. */`,
    `    readonly test: boolean;`,
    `  `,
    `    /** A unique value when referencing the order. */`,
    `    readonly token: string;`,
    `  `,
    `    /** The total discounts applied to the price of the order in the shop currency. */`,
    `    total_discounts: string;`,
    `  `,
    `    /** The total discounts applied to the price of the order in shop and presentment currencies. */`,
    `    total_discounts_set?: ShopifyFeesSet;`,
    `  `,
    `    /** The sum of all line item prices in the shop currency. */`,
    `    total_line_items_price: string;`,
    `  `,
    `    /** The total of all line item prices in shop and presentment currencies. */`,
    `    total_line_items_price_set?: ShopifyFeesSet;`,
    `  `,
    `    /** The total outstanding amount of the order in the shop currency. */`,
    `    total_outstanding?: string;`,
    `  `,
    `    /** The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive. */`,
    `    total_price: string; // PRICE`,
    `  `,
    `    /** The total price of the order in shop and presentment currencies. */`,
    `    total_price_set?: ShopifyFeesSet;`,
    `  `,
    `    /** The total shipping price of the order, excluding discounts and returns, in shop and presentment currencies. If taxes_included is set to true, then it includes taxes. */`,
    `    total_shipping_price_set?: ShopifyFeesSet;`,
    `  `,
    `    /** The sum of all the taxes applied to the order in the shop currency. Must be positive. */`,
    `    total_tax: string; // PRICE`,
    `  `,
    `    /** The total tax applied to the order in shop and presentment currencies. */`,
    `    total_tax_set?: ShopifyFeesSet;`,
    `  `,
    `    /** The sum of all the tips in the order in the shop currency. */`,
    `    readonly total_tip_received?: string;`,
    `  `,
    `    /** The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order. */`,
    `    total_weight?: number;`,
    `  `,
    `    /** The date and time (ISO 8601 format) when the order was last modified. */`,
    `    readonly updated_at: string; // ISO 8601`,
    `  `,
    `    /** The ID of the user logged into Shopify POS who processed the order, if applicable. */`,
    `    user_id?: number;`,
    `  `,
    `    /** The URL pointing to the order status web page, if applicable. */`,
    `    readonly order_status_url: string; // URL`,
    `  };`,
  ].join("\n");

  createDTOClass(
    {
      input: DOC.typescript,
    },
    toggleOutputs
  );
};
